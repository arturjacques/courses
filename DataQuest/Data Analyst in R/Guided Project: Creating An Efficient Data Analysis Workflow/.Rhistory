SELECT
country,
customers,
total_sales,
average_order,
customer_lifetime_value
FROM
(
SELECT
country,
count(distinct customer_id) customers,
SUM(unit_price) total_sales,
SUM(unit_price) / count(distinct customer_id) customer_lifetime_value,
SUM(unit_price) / count(distinct invoice_id) average_order,
CASE
WHEN country = "Other" THEN 1
ELSE 0
END AS sort
FROM country_or_other
GROUP BY country
ORDER BY sort ASC, total_sales DESC
);
'
run_query(sales_by_country)
country_metrics = run_query(sales_by_country)
ggplot(data = country_metrics, aes(x = reorder(country, -total_sales),
y = total_sales,
fill = country)) +
geom_bar(stat = "identity") +
labs(
title = "Total sales by country",
x = "Country",
y = "Total Sales"
) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = country_metrics, aes(x = reorder(country, -customers),
y = customers,
fill = country)) +
geom_bar(stat = "identity") +
coord_polar("y") +
labs(
title = "Number of customers by country",
x = "Country",
y = "Customers"
)
ggplot(data = country_metrics, aes(x = reorder(country, -customer_lifetime_value),
y = customer_lifetime_value,
color = country)) +
geom_point(stat = "identity") +
labs(
title = "Customer lifetime value by country",
x = "Country",
y = "Customer Lifetime Value"
) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
query <- "
WITH country_group_resume AS
(
SELECT
CASE
WHEN COUNT(DISTINCT c.customer_id) = 1 THEN 'OTHER'
ELSE c.country
END AS country_group,
COUNT(DISTINCT c.customer_id) as total_customers,
SUM(i.total) as total_sold,
COUNT(i.invoice_id) as number_sales
FROM customer c
LEFT JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY c.country
)
SELECT
country_group,
SUM(total_customers) as total_customers,
SUM(total_sold) as total_sold,
SUM(total_sold)/(sum(total_customers)) as avg_value_per_customer,
SUM(total_sold)/(SUM(number_sales)) as avg_value_per_sale
FROM country_group_resume
GROUP BY 1
ORDER BY 2 DESC;
"
sales_by_country <- run_query(query)
sales_by_country
columns_sales_by_country <- colnames(sales_by_country)
columns_sales_by_country <- colnames(sales_by_country) %>% select(-country_group)
library(dplyr)
columns_sales_by_country <- colnames(sales_by_country) %>% select(-country_group)
columns_sales_by_country <- colnames(sales_by_country) %>% select(-'country_group')
columns_sales_by_country <- colnames(sales_by_country)[2:]
columns_sales_by_country <- (colnames(sales_by_country))[2:]
x_vars <- c('country_group')
y_vars <- c('total_sold', 'avg_value_per_customer', 'avg_value_per_sale')
ggplot(data = sales_by_country) +
aes_string(x = x_vars, y = y_vars[1]) +
geom_bar(stat = 'identity')
x_vars <- c('country_group')
y_vars <- c('total_customers',
'total_sold',
'avg_value_per_customer',
'avg_value_per_sale')
ggplot(data = sales_by_country) +
aes_string(x = reorder(x_vars, -y_vars[1]), y = y_vars[1]) +
geom_bar(stat = 'identity')
x_vars <- c('country_group')
y_vars <- c('total_customers',
'total_sold',
'avg_value_per_customer',
'avg_value_per_sale')
ggplot(data = sales_by_country) +
aes_string(x = reorder(x_vars, y_vars[1]), y = y_vars[1]) +
geom_bar(stat = 'identity')
ggplot(data = sales_by_country) +
aes_string(x = x_vars, y = y_vars[1]) +
geom_bar(stat = 'identity')
sales_by_country %>%
mutate_at(x_vars, fct_reorder(x_vars, y_vars[1])) %>%
ggplot(data = sales_by_country) +
aes_string(x = x_vars, y = y_vars[1]) +
geom_bar(stat = 'identity')
library(forcats)
sales_by_country %>%
mutate_at(x_vars, fct_reorder(x_vars, y_vars[1])) %>%
ggplot(data = sales_by_country) +
aes_string(x = x_vars, y = y_vars[1]) +
geom_bar(stat = 'identity')
ggplot(data = sales_by_country) +
aes_string(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity')
```{r}
ggplot(data = sales_by_country) +
aes_string(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity')
query <- "
WITH country_group_resume AS
(
SELECT
CASE
WHEN COUNT(DISTINCT c.customer_id) = 1 THEN 'OTHER'
ELSE c.country
END AS country_group,
COUNT(DISTINCT c.customer_id) as total_customers,
SUM(i.total) as total_sold,
COUNT(i.invoice_id) as number_sales
FROM customer c
LEFT JOIN invoice i ON c.customer_id = i.customer_id
GROUP BY c.country
)
SELECT
country_group,
SUM(total_customers) as total_customers,
SUM(total_sold) as total_sold,
SUM(total_sold)/(sum(total_customers)) as avg_value_per_customer,
SUM(total_sold)/(SUM(number_sales)) as avg_value_per_sale
FROM country_group_resume
GROUP BY 1
ORDER BY 2 DESC;
"
sales_by_country <- run_query(query)
sales_by_country
```{r}
ggplot(data = sales_by_country) +
aes_string(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity')
sales_by_country
ggplot(data = sales_by_country) +
aes_string(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_pier(stat = 'identity')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity') +
labs(title = 'Customers by Country Group',
x = 'Country Group',
y = 'Customers')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity') +
labs(title = 'Customers by Country',
x = 'Country',
y = 'Customers')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Customers by Country',
x = 'Country',
y = 'Customers')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold, size = 10) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold, size = 20) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold, size = c(20,20)) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold, size = c(200,200)) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold, size = c(200,200)) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold') +
theme(axis.text.x = element_text(angle = 45))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity') +
labs(title = 'Customers by Country',
x = 'Country',
y = 'Customers')
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity') +
labs(title = 'Customers by Country',
x = 'Country',
y = 'Customers') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -avg_value_per_customer), y = avg_value_per_customer) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold by Country',
x = 'Country',
y = 'Total Sold') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -avg_value_per_customer), y = avg_value_per_customer) +
geom_bar(stat = 'identity') +
labs(title = 'Average Value Spent per Customer per Country',
x = 'Country',
y = 'Average Value Spent by Customer') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_customers), y = total_customers) +
geom_bar(stat = 'identity') +
labs(title = 'Customers per Country',
x = 'Country',
y = 'Customers') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -total_sold), y = total_sold) +
geom_bar(stat = 'identity') +
labs(title = 'Total Sold per Country',
x = 'Country',
y = 'Total Sold') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -avg_value_per_customer), y = avg_value_per_customer) +
geom_bar(stat = 'identity') +
labs(title = 'Average Value Spent per Customer per Country',
x = 'Country',
y = 'Average Value Spent per Customer') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(data = sales_by_country) +
aes(x = reorder(country_group, -avg_value_per_sale), y = avg_value_per_sale) +
geom_bar(stat = 'identity') +
labs(title = 'Average Value Spent per Sale per Country',
x = 'Country',
y = 'Average Value Spent per Sale') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
query <- "
WITH resume_invoice as
(
SELECT
count(t.track_id) tracks_bought,
AVG(t.album_id) average_album_id,
CAST(MIN(t.album_id) as float) min_album_id
FROM invoice i
LEFT JOIN invoice_line iv ON iv.invoice_id = i.invoice_id
LEFT JOIN track t on t.track_id = iv.track_id
group by i.invoice_id
),
tracks_album as
(
SELECT
album_id,
COUNT(track_id) as n_tracks FROM track
GROUP BY album_id
)
SELECT
SUM(re.tracks_bought) as tracks_sold,
COUNT(re.tracks_bought) as count_invoice,
CAST(COUNT(re.tracks_bought) as float)/(SELECT count(*) FROM resume_invoice) as percentage_invoice,
CAST(SUM(re.tracks_bought) as float)/(SELECT SUM(re2.tracks_bought) FROM resume_invoice) as percentage_sold,
CASE
WHEN re.average_album_id = al.album_id
AND
tracks_bought = n_tracks THEN 'yes'
ELSE
'no'
END is_album
FROM resume_invoice re
LEFT JOIN tracks_album al on al.album_id = re.min_album_id
GROUP BY is_album;
"
sales_by_country <- run_query(query)
query <- "
WITH resume_invoice as
(
SELECT
count(t.track_id) tracks_bought,
AVG(t.album_id) average_album_id,
CAST(MIN(t.album_id) as float) min_album_id
FROM invoice i
LEFT JOIN invoice_line iv ON iv.invoice_id = i.invoice_id
LEFT JOIN track t on t.track_id = iv.track_id
group by i.invoice_id
),
tracks_album as
(
SELECT
album_id,
COUNT(track_id) as n_tracks FROM track
GROUP BY album_id
)
SELECT
SUM(re.tracks_bought) as tracks_sold,
COUNT(re.tracks_bought) as count_invoice,
CAST(COUNT(re.tracks_bought) as float)/(SELECT count(*) FROM resume_invoice) as percentage_invoice,
CAST(SUM(re.tracks_bought) as float)/(SELECT SUM(re.tracks_bought) FROM resume_invoice) as percentage_sold,
CASE
WHEN re.average_album_id = al.album_id
AND
tracks_bought = n_tracks THEN 'yes'
ELSE
'no'
END is_album
FROM resume_invoice re
LEFT JOIN tracks_album al on al.album_id = re.min_album_id
GROUP BY is_album;
"
sales_by_country <- run_query(query)
sales_by_country
query <- "
WITH resume_invoice as
(
SELECT
count(t.track_id) tracks_bought,
t.album_id average_album_id,
CAST(MIN(t.album_id) as float) min_album_id
FROM invoice i
LEFT JOIN invoice_line iv ON iv.invoice_id = i.invoice_id
LEFT JOIN track t on t.track_id = iv.track_id
group by i.invoice_id
),
tracks_album as
(
SELECT
album_id,
COUNT(track_id) as n_tracks FROM track
GROUP BY album_id
)
SELECT
SUM(re.tracks_bought) as tracks_sold,
COUNT(re.tracks_bought) as count_invoice,
CAST(COUNT(re.tracks_bought) as float)/(SELECT count(*) FROM resume_invoice) as percentage_invoice,
CAST(SUM(re.tracks_bought) as float)/(SELECT SUM(re.tracks_bought) FROM resume_invoice) as percentage_sold,
CASE
WHEN re.average_album_id = al.album_id
AND
tracks_bought = n_tracks THEN 'yes'
ELSE
'no'
END is_album
FROM resume_invoice re
LEFT JOIN tracks_album al on al.album_id = re.min_album_id
GROUP BY is_album;
"
sales_by_country <- run_query(query)
sales_by_country
albums_vs_tracks = '
WITH invoice_first_track AS
(
SELECT
il.invoice_id invoice_id,
MIN(il.track_id) first_track_id
FROM invoice_line il
GROUP BY 1
)
SELECT
album_purchase,
COUNT(invoice_id) number_of_invoices,
CAST(count(invoice_id) AS FLOAT) / (
SELECT COUNT(*) FROM invoice
) percent
FROM
(
SELECT
ifs.*,
CASE
WHEN
(
SELECT t.track_id FROM track t
WHERE t.album_id = (
SELECT t2.album_id FROM track t2
WHERE t2.track_id = ifs.first_track_id
)
EXCEPT
SELECT il2.track_id FROM invoice_line il2
WHERE il2.invoice_id = ifs.invoice_id
) IS NULL
AND
(
SELECT il2.track_id FROM invoice_line il2
WHERE il2.invoice_id = ifs.invoice_id
EXCEPT
SELECT t.track_id FROM track t
WHERE t.album_id = (
SELECT t2.album_id FROM track t2
WHERE t2.track_id = ifs.first_track_id
)
) IS NULL
THEN "yes"
ELSE "no"
END AS "album_purchase"
FROM invoice_first_track ifs
)
GROUP BY album_purchase;
'
run_query(albums_vs_tracks)
query <- "
WITH resume_invoice as
(
SELECT
count(t.track_id) tracks_bought,
AVG(t.album_id) average_album_id,
CAST(MIN(t.album_id) as float) min_album_id
FROM invoice i
LEFT JOIN invoice_line iv ON iv.invoice_id = i.invoice_id
LEFT JOIN track t on t.track_id = iv.track_id
group by i.invoice_id
),
tracks_album as
(
SELECT
album_id,
COUNT(track_id) as n_tracks FROM track
GROUP BY album_id
)
SELECT
SUM(re.tracks_bought) as tracks_sold,
COUNT(re.tracks_bought) as count_invoice,
CAST(COUNT(re.tracks_bought) as float)/(SELECT count(*) FROM resume_invoice) as percentage_invoice,
CAST(SUM(re.tracks_bought) as float)/(SELECT SUM(re.tracks_bought) FROM resume_invoice) as percentage_sold,
CASE
WHEN re.average_album_id = al.album_id
AND
tracks_bought = n_tracks THEN 'yes'
ELSE
'no'
END is_album
FROM resume_invoice re
LEFT JOIN tracks_album al on al.album_id = re.min_album_id
GROUP BY is_album;
"
sales_by_country <- run_query(query)
sales_by_country
setwd("~/Documents/programas/courses/DataQuest/Guided Project: Creating An Efficient Data Analysis Workflow")
setwd("~/Documents/programas/courses/DataQuest/Guided Project: Creating An Efficient Data Analysis Workflow")
library(tidyverse)
game_log <- read_csv(game_log)
game_log <- read_csv('game_log.csv')
setwd("~/Documents/programas/courses/DataQuest/Guided Project: Creating An Efficient Data Analysis Workflow")
