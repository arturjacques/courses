print(positive_tested_top_3)
print(positive_tested_top_3)
positive_tested_top_3 <- positive_tested_top_3[c(1,2,3)] %>% round(2)
print(positive_tested_top_3)
covid_mat <- rbind(united_kingdom, united_states, turkey)
covid_mat <- rbind(united_kingdom, united_states, turkey)
covid_mat <- rbind(united_kingdom, united_states, turkey)
covid_mat <- rbind( united_states, turkey)
united_kingdom <-  c(0.11, 1473672, 166909, 0, 0)
united_states  <-  c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
covid_mat <- rbind(united_kingdom, united_states, turkey)
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
print(covid_mat)
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
print(answer)
matrices <- c(covid_mat)
dataframes <- c(covid_df, covid_df_all_states, covid_df_all_states_daily,
covid_df_all_states_daily_sum)
matrices <- c(covid_mat)
hopitalized_cases
vectores <- c(countries, tested_cases, positive_cases, active_cases,
hospitalized_cases, united_kingdom, united_states, turkey)
library(readr)
covid_df <- read_csv("Documents/programas/courses/DataQuest/Guided Project: Investigating COVID-19 Virus Trends/covid19.csv")
dim(covid_df)
vector_cols <- colnames(covid_df)
print(vector_cols)
head(covid_df)
library(tibble)
glimpse(covid_df)
library(dplyr)
covid_df_all_states <- covid_df %>%
filter(Province_State == "All States") %>%
select(-Province_State)
covid_df_all_states_daily <- select(covid_df_all_states,
Country_Region, active, hospitalizedCurr,
daily_tested, daily_positive)
covid_df_all_states_daily_sum <- covid_df_all_states_daily %>%
group_by(Country_Region) %>%
summarize(tested = sum(daily_tested),
positive = sum(daily_positive),
active = sum(active),
hospitalized = sum(hospitalizedCurr)) %>%
arrange(-tested)
covid_df_all_states_daily_sum
covid_top_10 <- head(covid_df_all_states_daily_sum, 10)
countries <- covid_top_10$Country_Region
tested_cases <- covid_top_10$tested
positive_cases <-  covid_top_10$positive
active_cases <- covid_top_10$active
hospitalized_cases <-  covid_top_10$hospitalized
names(tested_cases) <- countries
names(positive_cases) <- countries
names(active_cases) <- countries
names(hospitalized_cases) <- countries
positive_tested_top_3 <- sort(positive_cases/tested_cases, decreasing = T)
print(positive_tested_top_3)
positive_tested_top_3 <- positive_tested_top_3[c(1,2,3)] %>% round(2)
print(positive_tested_top_3)
united_kingdom <-  c(0.11, 1473672, 166909, 0, 0)
united_states  <-  c(0.10, 17282363, 1877179, 0, 0)
turkey <- c(0.08, 2031192, 163941, 2980960, 0)
covid_mat <- rbind(united_kingdom, united_states, turkey)
colnames(covid_mat) <- c("Ratio", "tested", "positive", "active", "hospitalized")
print(covid_mat)
question <- "Which countries have had the highest number of positive cases against the number of tests?"
answer <- c("Positive tested cases" = positive_tested_top_3)
dataframes <- c(covid_df, covid_df_all_states, covid_df_all_states_daily,
covid_df_all_states_daily_sum)
matrices <- c(covid_mat)
vectores <- c(countries, tested_cases, positive_cases, active_cases,
hospitalized_cases, united_kingdom, united_states, turkey)
data_structure_list <- list(dataframes = dataframes)
print(data_structure_list)
data_structure_list <- list("dataframes" = dataframes, "matrix"= matrices, "vector" = vectores)
print(data_structure_list)
covid_analysis_list <- list(question, answer, data_structure_list)
print(covid_analysis_list[2])
```{r}
library(lubridate)
library(lubridate)
library(ggplot2)
library(tidyverse)
library(tidyverse)
library(lubridate)
library(ggplot2)
setwd("~/Documents/programas/courses/DataQuest/Guided Project: Analyzing Forest Fire Data")
fire <- read_csv('forestfires.csv')
head(fire)
fire %>% group_by(month) %>% sumarrize(sum(area))
fire %>% group_by(month) %>% sumarrise(sum(area))
fire %>% group_by(month) %>% summarrise(sum(area))
fire %>% group_by(month) %>% summarrize(sum(area))
fire %>% group_by(month) %>% summarise(sum(area))
fire %>% group_by(month) %>% summarise(burned_area = sum(area))
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area))
fire %>% group_by(month) %>% summarise(burned_area = sum(area))
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area))
library(tidyverse)
library(lubridate)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(ggplot2)
```{r}
fire <- read_csv('forestfires.csv')
head(fire)
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area))
View(burnedArea)
ggplot(data = burnedArea) +
aes(x = month, y = burned_area)
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
barplot()
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar()
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area))
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar()
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity')
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months')
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month')
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = months, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = months, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = months, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area)) %>%
select(months)
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area)) %>%
select(months)
ggplot(data = burnedArea) +
aes(x = months, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
View(burnedArea)
View(burnedArea)
View(burnedArea)
months <- c('jan', 'fev', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct',
'nov', 'dec')
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area)) %>%
select(months)
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area))
ggplot(data = burnedArea) +
aes(x = months, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
burnedArea[months]
burnedArea[[months]
burnedArea[[months]]
burnedArea[[months]]
burnedArea[match(months, burnedArea$month)]
burnedArea[match(months, burnedArea$month)]
burnedArea$month <- reorder.factor(burnedArea$month, new.order = months)
burnedArea[, month]
burnedArea[, months]
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area)).set_index('month')
burnedArea.set_index(month)
burnedArea.set_index('month')
forest_fires <- read_csv("forestfires.csv")
fires_by_month <- forest_fires %>%
group_by(month) %>%
summarize(total_fires = n())
ggplot(data = fires_by_month) +
aes(x = month, y = total_fires) +
geom_bar(stat = "identity")  +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25,
colour = "black"))
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = sum(area))
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = n(area))
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = n())
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
burnedArea <- fire %>% group_by(month) %>% summarise(burned_area = n())
burnedArea <- fire %>% group_by(month) %>% summarise(total_fires = n())
ggplot(data = burnedArea) +
aes(x = month, y = burned_area) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Burned area on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'fires on the months', x = 'Month', y = 'Burned Area')
ggplot(data = burnedArea) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'fires on the months', x = 'Month', y = 'fires')
ggplot(data = burnedArea) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
burned <- fire %>% group_by(month) %>% summarise(total_fires = n())
ggplot(data = burned) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
burned <- fire %>% group_by(day) %>% summarise(total_fires = n())
ggplot(data = burned) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
ggplot(data = burned) +
aes(x = day, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
fires_by_DOW <- forest_fires %>%
group_by(day) %>%
summarize(total_fires = n())
ggplot(data = fires_by_DOW) +
aes(x = day, y = total_fires) +
geom_bar(stat = "identity") +
theme(panel.background = element_rect(fill = "white"),
axis.line = element_line(size = 0.25,
colour = "black"))
burned <- fire %>% group_by(month) %>% summarise(total_fires = n()) %>%
mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")))
ggplot(data = burned) +
aes(x = month, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
burned <- fire %>% group_by(day) %>% summarise(total_fires = n()) %>%
mutate(day = factor(day, levels = c('sun', 'mon', 'tue', 'wed', 'fri','sat')
)
)
ggplot(data = burned) +
aes(x = day, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
burned <- fire %>% group_by(day) %>% summarise(total_fires = n()) %>%
mutate(day = factor(day, levels = c('sun', 'mon', 'tue', 'wed', 'thu', 'fri','sat')
)
)
ggplot(data = burned) +
aes(x = day, y = total_fires) +
geom_bar(stat = 'identity') +
labs(title = 'Fires on the months', x = 'Month', y = 'Fires')
geom_boxplot()
ggplot(data = fire) +
aes_string(x = 'month', y = 'FFMC')
geom_boxplot()
ggplot(data = fire) +
aes_string(x = 'month', y = 'FFMC') +
geom_boxplot()
map2(x_vector, y_vector, create_graph)
create_graph <- function(x_var, y_var){
ggplot(data = fire) +
aes_string(x = x_var, y = y_var) +
geom_boxplot()
}
map2(x_vector, y_vector, create_graph)
x_vector = c('month', 'day')
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
create_graph <- function(x_var, y_var){
ggplot(data = fire) +
aes_string(x = x_var, y = y_var) +
geom_boxplot()
}
map2(x_vector, y_vector, create_graph)
x_vector = c('month')
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
create_graph <- function(x_var, y_var){
ggplot(data = fire) +
aes_string(x = x_var, y = y_var) +
geom_boxplot()
}
map2(x_vector, y_vector, create_graph)
map(y_vector, create_graph)
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
create_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'day', y = y_var) +
geom_boxplot()
ggplot(data = fire) +
aes_string(x = 'month', y = y_var) +
geom_boxplot()
}
map(y_vector, create_graph)
create_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'day', y = y_var) +
geom_boxplot()
ggplot(data = fire) +
aes_string(x = 'month', y = y_var) +
geom_boxplot()
}
map(y_vector, create_graph)
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
month_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'month', y = y_var) +
geom_boxplot()
}
day_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'day', y = y_var) +
geom_boxplot()
}
map(y_vector, create_graph)
map(y_vector, month_graph)
map(y_vector, month_graph)
map(y_vector, day_graph)
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
month_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'month', y = y_var) +
geom_boxplot()
}
map(y_vector, month_graph)
```{r}
day_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'day', y = y_var) +
geom_boxplot()
}
map(y_vector, day_graph)
## Write the function
create_boxplots <- function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_month <- names(forest_fires)[3] ## month
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
## Write the function
create_boxplots <- function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_month <- names(forest_fires)[3] ## month
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
## write the function
create_scatterplots = function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_point() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_scatter <- names(forest_fires)[5:12]
y_var_scatter <- names(forest_fires)[13]
## use the map() function to apply the function to the variables of interest
scatters <- map2(x_var_scatter, y_var_scatter, create_scatterplots)
## write the function
create_scatterplots = function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_point() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_scatter <- names(forest_fires)[5:12]
y_var_scatter <- names(forest_fires)[13]
## use the map() function to apply the function to the variables of interest
scatters <- map2(x_var_scatter, y_var_scatter, create_scatterplots)
forest_fires <- forest_fires %>%
mutate(month = factor(month, levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec")),
day = factor(day, levels = c("sun", "mon", "tue", "wed", "thu", "fri", "sat")))
## once you have reordered the months and days of the week, you can re-run the bar chart code above
# to create new bar graphs
Write a function to create a boxplot for visualizing variable distributions by month and day of the week
```{r}
## Write the function
create_boxplots <- function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
## Write the function
create_boxplots <- function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_boxplot() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_month <- names(forest_fires)[3] ## month
x_var_day <- names(forest_fires)[4] ## day
y_var <- names(forest_fires)[5:12]
## use the map() function to apply the function to the variables of interest
month_box <- map2(x_var_month, y_var, create_boxplots) ## visualize variables by month
day_box <- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
Create scatter plots to see which variables may affect forest fire size:
```{r}
## write the function
create_scatterplots = function(x, y) {
ggplot(data = forest_fires) +
aes_string(x = x, y = y) +
geom_point() +
theme(panel.background = element_rect(fill = "white"))
}
## Assign x and y variable names
x_var_scatter <- names(forest_fires)[5:12]
y_var_scatter <- names(forest_fires)[13]
## use the map() function to apply the function to the variables of interest
scatters <- map2(x_var_scatter, y_var_scatter, create_scatterplots)
## use the map() function to apply the function to the variables of interest
map2(x_var_scatter, y_var_scatter, create_scatterplots)
<- map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
map2(x_var_day, y_var, create_boxplots) ## visualize variables by day
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
month_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'month', y = y_var) +
geom_boxplot()
}
map(y_vector, month_graph)
fire <- fire %>% mutate(
month = factor(
month, levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug",
"sep", "oct","nov", "dec"
)
),
day = factor(day, levels = c('sun', 'mon', 'tue', 'wed', 'thu', 'fri','sat'))
)
fire <- fire %>% mutate(
month = factor(
month, levels = c("jan", "feb", "mar", "apr", "may", "jun", "jul", "aug",
"sep", "oct","nov", "dec"
)
),
day = factor(day, levels = c('sun', 'mon', 'tue', 'wed', 'thu', 'fri','sat'))
)
y_vector = c('FFMC', 'DMC', 'DC', 'ISI', 'temp', 'RH', 'wind', 'rain')
month_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'month', y = y_var) +
geom_boxplot()
}
map(y_vector, month_graph)
View(fire)
day_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'day', y = y_var) +
geom_boxplot()
}
map(y_vector, day_graph)
ggplot(data = fire) +
aes_string(x = 'area', y = y_var) +
geom_point()
day_scatter_graph <- function(y_var){
ggplot(data = fire) +
aes_string(x = 'area', y = y_var) +
geom_point()
}
map(y_vector, day_scatter_graph)
ggplot(data = fire) +
aes_string(x =x_var, y = 'area') +
geom_point()
day_scatter_graph <- function(x_var){
ggplot(data = fire) +
aes_string(x =x_var, y = 'area') +
geom_point()
}
map(y_vector, day_scatter_graph)
